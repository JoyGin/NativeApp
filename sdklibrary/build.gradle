plugins {
    id 'com.android.library'
}

android {
    namespace 'com.example.sdklibrary'
    compileSdk 33

    defaultConfig {
        minSdk 24
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "src/main/jni/CMakeLists.txt"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}

//设置sdk名称、版本、生成位置，解压的classes.jar包
def SDK_NAME = "SDK";
def SDK_VERSION = "_V1.0";
task outAar(type: Copy) {
    from layout.buildDirectory.file("outputs/aar/sdklibrary-release.aar")
    into layout.projectDirectory.file("sdkAar")
    rename 'sdklibrary-release.aar', SDK_NAME + SDK_VERSION + ".aar"
}

outAar.dependsOn(assemble)
